<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="com.first.shop.dao.OrderMapper">
			
		<!-- 구매 요청  -->
		<insert id="register_product" parameterType="Orders">
			insert into orders (order_id, user_id, total_amount, delivery_cost, status, payment_method, delivery_address)
			values (#{order_id}, #{user_id}, #{total_amount}, #{delivery_cost}, #{status}, #{payment_method}, #{delivery_address});
		</insert>
		
		<!-- 주문_상품 테이블에 데이터 삽입 -->
		<insert id="register_order_product" parameterType="OrderProduct">
			insert into order_product (order_id, product_id, quantity, price, savepoint)
			values (#{order_id}, #{product_id}, #{quantity}, #{price}, #{savepoint}) 
		</insert>
		
		<!-- 유저가 사용한 금액,포인트정보 업데이트-->
		<update id="update_user" parameterType="User">
			update user set money = #{money} , point = #{point}
		</update>
		
		<!-- 상품 재고 변경-->
		<update id="update_stock" parameterType="Product">
			update product set stock = #{stock} where product_id = #{product_id}
		</update>	
		
		<!-- 주문한 유저 정보를 가져온다 * 사실 이미 다른 매퍼에 정의돼있는 코드라 중복이 발생한다는 점이 아쉬움 -->
		<select id="orderUser_info" parameterType="String" resultType="User">
			select * from user where id = #{id}
		</select>	
		
		<!-- 주문할 상품 정보를 가져온다. -->
		<select id="orderProduct_info" parameterType="int" resultType="Product">
			select * from product where product_id = #{product_id}
		</select>
		
		<!-- 주문이 완료된 상품들을 장바구니에서 제거한다.  -->
		<delete id="delete_Ordered_Cart" parameterType="cart">
			delete from cart where user_id = #{user_id} and product_id = #{product_id}
		</delete>
		
		<!-- 유저의 구매이력 조회 -->
		<select id="get_Purchase_History" parameterType="String" resultType="Purchase_History">
		select o.order_id, o.order_date, o.status, o.payment_method
		, op.product_id, op.price, op.quantity, op.savepoint,
		 p.product_id, p.product_thumbimage, p.product_name
		
		from orders o join order_product op
		
		on o.order_id = op.order_id
		join product p on p.product_id = op.product_id
		where o.user_id = #{user_id};
		</select>
		
		
	</mapper>	